name: Build and Push Api Einvoice

# Controls when the workflow will run
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - dev
      - main
# Define jobs for the workflow
jobs:
  build:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "${{ secrets.ENV_FILE_PRODUCTION }}" > .env
            echo "TAGS=${{ vars.VERSION_PRODUCTION }}" >> $GITHUB_ENV

          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "${{ secrets.ENV_FILE_DEV }}" > .env
            echo "TAGS=${{ vars.VERSION_DEV }}" >> $GITHUB_ENV

          fi

      - name: Build and push docker image to ghcr
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          name: ${{ vars.IMAGE_NAME }}
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
          tags: ${{ env.TAGS }}
          dockerfile: Dockerfile

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set Docker Registry
        # id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DOCKER_REGISTRY=${{ vars.CONTAINER_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.VERSION_PRODUCTION }}" >> $GITHUB_ENV
            echo "CONTAINER_NAME=${{ vars.CONTAINER_NAME_PRODUCTION }}" >> $GITHUB_ENV
            echo "CONTAINER_PORT=${{ vars.CONTAINER_PORT_PRODUCTION }}" >> $GITHUB_ENV
            echo "VOLUME=${{ vars.VOLUME_UPLOAD_FILE_PRODUCTION }}" >> $GITHUB_ENV

          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "DOCKER_REGISTRY=${{ vars.CONTAINER_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.VERSION_DEV }}" >> $GITHUB_ENV
            echo "CONTAINER_NAME=${{ vars.CONTAINER_NAME_DEV }}" >> $GITHUB_ENV   
            echo "CONTAINER_PORT=${{ vars.CONTAINER_PORT_DEV }}" >> $GITHUB_ENV
            echo "VOLUME=${{ vars.VOLUME_UPLOAD_FILE_DEV }}" >> $GITHUB_ENV

          fi    
      - name: Deploy package to VPS
        uses: appleboy/ssh-action@v1.0.0
        # env:
        #   IMAGE: ${{ vars.CONTAINER_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}
        with:
          host: ${{ secrets.SERVER_HOST }} 
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ secrets.GH_USERNAME }} --password-stdin
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }}  || true

            docker rmi ${{ env.DOCKER_REGISTRY }}  || true
            docker pull ${{ env.DOCKER_REGISTRY }}

            docker run -d --name ${{ env.CONTAINER_NAME }} --restart unless-stopped -v ${{ env.VOLUME }}:${{ vars.UPLOAD_FOLDER }} -p ${{ env.CONTAINER_PORT }}:${{ vars.PORT }} ${{ env.DOCKER_REGISTRY }}
