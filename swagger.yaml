swagger: '2.0'
info:
  version: '1.0.0'
  title: User API
  description: API for managing users
host: localhost:3000
basePath: /
schemes:
  - http
paths:
  /api/users:
    post:
      summary: Create a new user
      tags:
        - Users
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: The user to create
          schema:
            type: object
            required:
              - fullname
              - email
              - username
              - password
              - phoneNumber
              - role_Id
            properties:
              fullname:
                type: string
              email:
                type: string
              username:
                type: string
              password:
                type: string
              phoneNumber:
                type: string
              role_Id:
                type: string
      responses:
        '201':
          description: User created
        '400':
          description: Invalid input
  /api/users/update-password:
    post:
      summary: Update user password
      tags:
        - Users
      description: This endpoint allows a user to update their password after successful email verification.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: passwordUpdate
          description: The new password for the user
          required: true
          schema:
            type: object
            properties:
              newpassword:
                type: string
                description: The new password for the user account.
      responses:
        '200':
          description: Password updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "xác thực mail thành công"
        '400':
          description: Invalid input
        '401':
          description: Unauthorized, token missing or invalid
  /api/users/login:
    post:
      summary: Authenticate user and return JWT
      tags:
        - Users
      description: >
        This endpoint authenticates a user by their email and password, and returns a JWT if the authentication is successful.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: User's login credentials
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        '200':
          description: Authentication successful, returns JWT
          schema:
            type: object
            properties:
              token:
                type: string
                description: JWT for authenticated user
        '401':
          description: Authentication failed due to invalid email or password
        '500':
          description: Internal server error
  /api/users/change-password:
    post:
      summary: Change user password
      tags:
        - Users
      description: This endpoint allows authenticated users to change their password by providing the old password and the new password.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: JWT Token
        - in: body
          name: passwordDetails
          description: Old and new password details
          required: true
          schema:
            type: object
            required:
              - oldPassword
              - newPassword
            properties:
              oldPassword:
                type: string
                format: password
              newPassword:
                type: string
                format: password
      responses:
        '200':
          description: Password changed successfully
        '401':
          description: Unauthorized or old password is incorrect
        '404':
          description: User not found
        '500':
          description: Internal server error
  /api/users/sendmaildemo:
    post:
      summary: Send a verification email to the user
      tags:
        - Users
      description: Sends a verification email to the user specified by the email in the request body.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Email of the user to send the verification email to
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                format: email
      responses:
        '200':
          description: Verification email sent successfully
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Email not found
          schema:
            type: object
            properties:
              message:
                type: string
        '500':
          description: Error sending email
          schema:
            type: object
            properties:
              message:
                type: string
  /api/roles:
    post:
      summary: Create a new role
      tags:
        - Roles
      description: This endpoint allows authenticated users to create a new role.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: JWT Token
        - in: body
          name: roleDetails
          description: Role details
          required: true
          schema:
            type: object
            required:
              - Name
              - Description
              - isAdmin
              - listClaim
            properties:
              Name:
                type: string
              Description:
                type: string
              isAdmin:
                type: boolean
              listClaim:
                type: array
                items:
                  type: string
      responses:
        '201':
          description: Role created successfully
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                $ref: '#/definitions/Role'
        '400':
          description: Role already exists or invalid input data
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal server error    
  /companies:
    post:
      summary: Create a new company
      tags:
        - Company
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: company
          description: The company data to create
          schema:
            type: object
            properties:
              companyName:
                type: string
              address:
                type: string
              phoneNumber:
                type: string
              userNameAdmin:
                type: string
              passwordAdmin:
                type: string
              subscriptionId:
                type: string
              userId:
                type: string
              emailCompany:
                type: string
              taxCompany:
                type: string
              countryCode:
                type: string
              imageCompany:
                type: string
              startDateSubs:
                type: string
      responses:
        '201':
          description: Company created
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                $ref: '#/definitions/Company'
        '400':
          description: Invalid input
          schema:
            type: object
            properties:
              message:
                type: string
        '500':
          description: Error creating company
          schema:
            type: object
            properties:
              message:
                type: string
              error:
                type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      username:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      emailConfirmed:
        type: boolean
      phoneConfirmed:
        type: boolean
      isDelete:
        type: boolean
      createTime:
        type: string
        format: date-time
      updateTime:
        type: string
        format: date-time
      isActive:
        type: boolean
  Role:
    type: object
    properties:
      Name:
        type: string
      Description:
        type: string
      isAdmin:
        type: boolean
      listClaim:
        type: array
  Company:
    type: object
    properties:
        companyName:
            type: string
        address:
            type: string
        phoneNumber:
            type: string
        userNameAdmin:
            type: string
        passwordAdmin:
            type: string
        subscriptionId:
            type: string
        userId:
            type: string
        emailCompany:
            type: string
        taxCompany:
            type: string
        countryCode:
            type: string
        imageCompany:
            type: string
        startDateSubs:
            type: string
