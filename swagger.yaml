swagger: '2.0'
info:
  version: '1.0.0'
  title: User API
  description: API for managing users
host: localhost:3000
basePath: /
schemes:
  - http
paths:
  /api/users:
    post:
      summary: Create a new user
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: The user to create
          schema:
            type: object
            required:
              - email
              - username
              - password
              - phoneNumber
            properties:
              email:
                type: string
              username:
                type: string
              password:
                type: string
              phoneNumber:
                type: string
      responses:
        '201':
          description: User created
        '400':
          description: Invalid input
    get:
      summary: Get a list of users
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: A list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /api/users/login:
    post:
      summary: Authenticate user and return JWT
      description: >
        This endpoint authenticates a user by their email and password, and returns a JWT if the authentication is successful.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: User's login credentials
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        '200':
          description: Authentication successful, returns JWT
          schema:
            type: object
            properties:
              token:
                type: string
                description: JWT for authenticated user
        '401':
          description: Authentication failed due to invalid email or password
        '500':
          description: Internal server error
  /api/users/change-password:
    post:
      summary: Change user password
      description: This endpoint allows authenticated users to change their password by providing the old password and the new password.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: JWT Token
        - in: body
          name: passwordDetails
          description: Old and new password details
          required: true
          schema:
            type: object
            required:
              - oldPassword
              - newPassword
            properties:
              oldPassword:
                type: string
                format: password
              newPassword:
                type: string
                format: password
      responses:
        '200':
          description: Password changed successfully
        '401':
          description: Unauthorized or old password is incorrect
        '404':
          description: User not found
        '500':
          description: Internal server error
      

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      username:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      emailConfirmed:
        type: boolean
      phoneConfirmed:
        type: boolean
      isDelete:
        type: boolean
      createTime:
        type: string
        format: date-time
      updateTime:
        type: string
        format: date-time
      isActive:
        type: boolean